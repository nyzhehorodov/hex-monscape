namespace: hex-monscape

mysql:
  defines: runnable
  inherits: monk-mysql/db
  metadata:
    name: mysql
    description: MySQL database for server storage
    icon: https://labs.mysql.com/common/logos/mysql-logo.svg?v2
  variables:
    image_tag:
      type: string
      value: latest
      description: ''
    monk_mysql_database:
      type: string
      value: monk
      description: ''
    monk_mysql_password:
      type: string
      value: monk
      description: ''
    monk_mysql_root_password:
      type: string
      value: monk
      description: ''
    monk_mysql_user:
      type: string
      value: monk
      description: ''

client:
  defines: runnable
  metadata:
    name: client
    description: Frontend service built with Vue.js
    icon: https://emojiapi.dev/api/v1/robot.svg
  containers:
    client:
      image: env-3247.registry.local/client:master-51cea85
      build: .
      dockerfile: Dockerfile.client
  services:
    http-server:
      description: Port for serving the Vue.js frontend application
      container: client
      port: 8080
      host-port: 8080
      publish: true
      protocol: tcp
  connections: {}
  variables: {}

server:
  defines: runnable
  metadata:
    name: server
    description: Backend server component
    icon: https://emojiapi.dev/api/v1/robot.svg
  containers:
    server:
      image: env-3247.registry.local/server:master-51cea85
      build: .
      dockerfile: Dockerfile.server
  services:
    http-server-port:
      description: HTTP server listening port
      container: server
      port: $port
      host-port: $port
      publish: true
      protocol: tcp
  connections:
    mysql-database-connection:
      target: hex-monscape/mysql
      service: monk-mysql-db
      optional: true
      description: Connection to the MySQL database service
  variables:
    port:
      env: PORT
      type: string
      value: 8080
      description: The port on which the server service will run
    storage-type:
      env: STORAGE_TYPE
      type: string
      value: memory
      description: The type of storage to use, defaults to in-memory storage
    sql-dsn:
      env: SQL_DSN
      type: string
      value: <- connection-port("mysql-database-connection")
      description: MySQL Data Source Name, connection string for MySQL database
    monster-data-path:
      env: MONSTER_DATA_PATH
      type: string
      value: /data/monsters
      description: File path for monster data, used when storage type is memory
    localstack-endpoint:
      env: LOCALSTACK_ENDPOINT
      type: string
      value: http://localstack:4566
      description: Endpoint for Localstack, used when storage type is dynamodb
    battle-table-name:
      env: BATTLE_TABLE_NAME
      type: string
      value: battles
      description: DynamoDB table name for battles, used when storage type is dynamodb
    game-table-name:
      env: GAME_TABLE_NAME
      type: string
      value: games
      description: DynamoDB table name for games, used when storage type is dynamodb
    monster-table-name:
      env: MONSTER_TABLE_NAME
      type: string
      value: monsters
      description: DynamoDB table name for monsters, used when storage type is dynamodb

stack:
  defines: group
  members:
    - hex-monscape/mysql
    - hex-monscape/client
    - hex-monscape/server
